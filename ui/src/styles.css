/* You can add global styles to this file, and also import other style files*/
/* Wrap target UI with: <div class="crt">...</div> */
.crt {
  position: relative;
  filter: contrast(1.05) saturate(1.15);
  background-color: #0a0815;
  overflow: hidden;
}

/* Scanlines */
.crt::before {
  content: "";
  position: absolute; inset: 0;
  pointer-events: none;
  background:
    repeating-linear-gradient(
      to bottom,
      rgba(255,255,255,0.1) 0px,
      rgba(255,255,255,0.1) 1px,
      rgba(0,0,0,0.4) 3px,
      rgba(0,0,0,0) 3px
    );
}

/* Vignette + subtle curvature shadow */
.crt::after {
  content: "";
  position: absolute; inset: -2%;
  pointer-events: none;
  background:
    radial-gradient(ellipse at center,
      rgba(0,0,0,0) 60%, rgba(0,0,0,.35) 100%);
  box-shadow:
    inset 0 0 60px rgba(0,0,0,.6),
    inset 0 0 120px rgba(0,0,0,.35);
}

/* Use on text: <h1 class="crt-rgb">TITLE</h1> */
.crt-rgb {
  position: relative;
  color: #e9eaf2;
  text-shadow:
    -1px 0 0 #ff004c,  /* red */
     1px 0 0 #00f0ff,  /* cyan */
     0  1px 0 #39ff14; /* green */
}

/* Add class "crt-flicker" on the container to enable */
@keyframes crtFlicker {
  0%, 100% { opacity: 1; filter: brightness(1); }
  50%      { opacity: .885; filter: brightness(0.98) contrast(1.02); }
  52%      { opacity: .97; filter: brightness(0.96) contrast(1.05); }
}
.crt-flicker { animation: crtFlicker 3.2s infinite; }

/* Add class "crt-noise" for a touch of grain */
@keyframes crtNoise {
  0% { background-position: 0 0, 0 0; }
  100% { background-position: 100% 100%, 0 0; }
}
.crt-noise::before {
  background:
    url("data:image/svg+xml;utf8,\
<svg xmlns='http://www.w3.org/2000/svg' width='60' height='60' viewBox='0 0 60 60'>\
<filter id='n'><feTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='2' stitchTiles='stitch'/></filter>\
<rect width='100%' height='100%' filter='url(%23n)' opacity='0.05'/></svg>") repeat,
    repeating-linear-gradient( to bottom,
      rgba(255,255,255,0.06) 0px, rgba(255,255,255,0.06) 1px,
      rgba(0,0,0,0) 2px, rgba(0,0,0,0) 3px);
  opacity: .45;
  animation: crtNoise 1.5s steps(2,end) infinite;
}

/* Use on an element: <h1 class="glitch" data-text="TITLE">TITLE</h1> */
.glitch {
  position: relative;
  display: inline-block;
  color: #fff;
  text-shadow: 0 0 80px rgba(181,23,240,.6);
}
.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute; inset: 0;
  mix-blend-mode: screen;
}
.glitch::before {
  color: #ff004c;
  transform: translate(-5px, -5.5px);
  clip-path: polygon(0 2%,100% 2%,100% 38%,0 38%);
  animation: glitchTop 1s infinite linear alternate-reverse;
}
.glitch::after {
  color: #00f0ff;
  transform: translate(50px, 5.5px);
  clip-path: polygon(0 62%,100% 62%,100% 100%,0 100%);
  animation: glitchBot 0.2s infinite linear alternate-reverse;
}
@keyframes glitchTop {
  0% { transform: translate(-10px,-0.5px); }
  20% { transform: translate(-30px, 0.5px); }
  40% { transform: translate(20px,-1px); }
  60% { transform: translate(-20px,1px); }
  80% { transform: translate(10px,-0.5px); }
  100%{ transform: translate(-10px,-0.5px); }
}
@keyframes glitchBot {
  0% { transform: translate(1px,0.5px); }
  25% { transform: translate(3px,-0.5px); }
  50% { transform: translate(-2px,1px); }
  75% { transform: translate(2px,-1px); }
  100%{ transform: translate(1px,0.5px); }
}

/* Curved edges */
.crt-curved {
  border-radius: 18px;
  box-shadow:
    inset 0 0 80px rgba(255,255,255,0.04),
    inset 0 0 160px rgba(0,0,0,0.6),
    0 20px 50px rgba(0,0,0,0.6);
  border: 1px solid rgba(255,255,255,0.08);
}

/* Phosphor triad mask pattern */
.crt-mask::before {
  background-image:
    radial-gradient(circle at 0 0, rgba(255,0,0,.15) 2px, transparent 3px),
    radial-gradient(circle at 4px 0, rgba(0,255,0,.15) 2px, transparent 3px),
    radial-gradient(circle at 8px 0, rgba(0,128,255,.15) 2px, transparent 3px);
  background-size: 12px 3px;
  mix-blend-mode: overlay;
  opacity: .18;
}

h1 {
  font-size: 100px;
}
